"""Initialize OpenFatture."""

from pathlib import Path

import typer
from rich.console import Console
from rich.panel import Panel
from rich.prompt import Confirm, Prompt

from openfatture.storage.database.base import init_db
from openfatture.utils.config import get_settings
from openfatture.utils.validators import validate_codice_fiscale, validate_partita_iva

app = typer.Typer()
console = Console()


@app.command()
def init(
    interactive: bool = typer.Option(
        True,
        "--interactive/--no-interactive",
        "-i/-n",
        help="Run interactive setup wizard",
    ),
) -> None:
    """
    Initialize OpenFatture with database and configuration.

    This command sets up:
    - Database structure
    - Configuration directories
    - Initial settings (in interactive mode)
    """
    console.print("\n[bold blue]üöÄ OpenFatture Setup[/bold blue]\n")

    settings = get_settings()

    # Create directories
    console.print("[cyan]Creating directories...[/cyan]")
    settings.data_dir.mkdir(parents=True, exist_ok=True)
    settings.archivio_dir.mkdir(parents=True, exist_ok=True)
    settings.certificates_dir.mkdir(parents=True, exist_ok=True)
    console.print("  ‚úì Data directories created\n")

    # Initialize database
    console.print("[cyan]Initializing database...[/cyan]")
    init_db(str(settings.database_url))
    console.print(f"  ‚úì Database initialized at: {settings.database_url}\n")

    # Interactive configuration
    if interactive:
        console.print("[bold yellow]üìù Let's configure your company data[/bold yellow]\n")

        env_file = Path(".env")
        env_content = []

        if env_file.exists():
            if not Confirm.ask(
                "[yellow]A .env file already exists. Overwrite?[/yellow]",
                default=False,
            ):
                console.print("\n[green]Setup complete! Existing .env preserved.[/green]")
                return
        else:
            # Copy example if starting fresh
            example = Path(".env.example")
            if example.exists():
                env_content = example.read_text().splitlines()

        # Gather company data
        console.print("\n[bold]Company Information (Cedente Prestatore)[/bold]")

        denominazione = Prompt.ask("Company/Your name", default="")
        partita_iva = ""
        while not partita_iva:
            piva = Prompt.ask("Partita IVA (11 digits)", default="")
            if validate_partita_iva(piva):
                partita_iva = piva
            else:
                console.print("[red]Invalid Partita IVA. Please try again.[/red]")

        codice_fiscale = ""
        while not codice_fiscale:
            cf = Prompt.ask("Codice Fiscale (16 characters)", default="")
            if validate_codice_fiscale(cf):
                codice_fiscale = cf.upper()
            else:
                console.print("[red]Invalid Codice Fiscale. Please try again.[/red]")

        indirizzo = Prompt.ask("Address (Via/Piazza)", default="")
        cap = Prompt.ask("CAP (Postal code)", default="")
        comune = Prompt.ask("City (Comune)", default="")
        provincia = Prompt.ask("Province (2 letters, e.g., RM)", default="").upper()

        console.print("\n[bold]PEC Configuration[/bold]")
        pec_address = Prompt.ask("Your PEC address", default="")
        pec_password = Prompt.ask("PEC password", password=True, default="")
        pec_smtp = Prompt.ask("PEC SMTP server", default="smtp.pec.aruba.it")

        console.print("\n[bold]Email Notifications[/bold]")
        notification_email = Prompt.ask(
            "Email for notifications (SDI alerts, batch summaries)",
            default=pec_address,  # Default to PEC if not specified
        )
        locale = Prompt.ask("Locale (it/en)", default="it")

        # Write .env file
        env_lines = [
            "# OpenFatture Configuration",
            "# Generated by setup wizard",
            "",
            "# Database",
            f'DATABASE_URL="{settings.database_url}"',
            "",
            "# Company Data",
            f'CEDENTE_DENOMINAZIONE="{denominazione}"',
            f"CEDENTE_PARTITA_IVA={partita_iva}",
            f"CEDENTE_CODICE_FISCALE={codice_fiscale}",
            "CEDENTE_REGIME_FISCALE=RF19",
            f'CEDENTE_INDIRIZZO="{indirizzo}"',
            f"CEDENTE_CAP={cap}",
            f'CEDENTE_COMUNE="{comune}"',
            f"CEDENTE_PROVINCIA={provincia}",
            "CEDENTE_NAZIONE=IT",
            "",
            "# PEC Configuration",
            f"PEC_SMTP_SERVER={pec_smtp}",
            "PEC_SMTP_PORT=465",
            f"PEC_ADDRESS={pec_address}",
            f'PEC_PASSWORD="{pec_password}"',
            "SDI_PEC_ADDRESS=sdi01@pec.fatturapa.it",
            "",
            "# Email Templates & Notifications",
            f"NOTIFICATION_EMAIL={notification_email}",
            "NOTIFICATION_ENABLED=true",
            f"LOCALE={locale}",
            "# Optional branding (uncomment to customize):",
            "# EMAIL_LOGO_URL=https://yourcompany.com/logo.png",
            "# EMAIL_PRIMARY_COLOR=#1976D2",
            "# EMAIL_FOOTER_TEXT=¬© 2025 Your Company",
            "",
            "# AI Configuration (optional - add your API key here)",
            "# AI_PROVIDER=anthropic",
            "# AI_MODEL=claude-3-5-sonnet-20241022",
            "# AI_API_KEY=sk-ant-your-key-here",
        ]

        env_file.write_text("\n".join(env_lines))
        console.print(f"\n  ‚úì Configuration saved to: {env_file.absolute()}\n")

    # Success message
    panel = Panel(
        "[bold green]‚úì OpenFatture is ready to use![/bold green]\n\n"
        "Next steps:\n"
        "  ‚Ä¢ Add a client: [cyan]openfatture cliente add[/cyan]\n"
        "  ‚Ä¢ Create an invoice: [cyan]openfatture fattura crea[/cyan]\n"
        "  ‚Ä¢ View help: [cyan]openfatture --help[/cyan]",
        title="üéâ Setup Complete",
        border_style="green",
    )
    console.print(panel)
